// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor;

namespace Servidor.Migrations
{
    [DbContext(typeof(TeatroDbContext))]
    [Migration("20220608011617_Teatro")]
    partial class Teatro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Servidor.Bilhete", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("sessoesid")
                        .HasColumnType("int");

                    b.Property<bool>("visto")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("sessoesid");

                    b.ToTable("Bilhets");
                });

            modelBuilder.Entity("Servidor.Cliente", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("contaVirtual")
                        .HasColumnType("float");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Servidor.Espetaculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dataFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("preco")
                        .HasColumnType("float");

                    b.Property<string>("sinopse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("teatrosid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("teatrosid");

                    b.ToTable("Espetaculs");
                });

            modelBuilder.Entity("Servidor.Sessao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("espetaculosid")
                        .HasColumnType("int");

                    b.Property<string>("horaFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lugarDisponivel")
                        .HasColumnType("int");

                    b.Property<int>("lugarTotal")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("espetaculosid");

                    b.ToTable("Sessas");
                });

            modelBuilder.Entity("Servidor.Teatro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefone")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Teatrs");
                });

            modelBuilder.Entity("Servidor.Bilhete", b =>
                {
                    b.HasOne("Servidor.Cliente", "Cliente")
                        .WithMany("bilhetes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Servidor.Sessao", "sessoes")
                        .WithMany()
                        .HasForeignKey("sessoesid");

                    b.Navigation("Cliente");

                    b.Navigation("sessoes");
                });

            modelBuilder.Entity("Servidor.Espetaculo", b =>
                {
                    b.HasOne("Servidor.Teatro", "teatros")
                        .WithMany()
                        .HasForeignKey("teatrosid");

                    b.Navigation("teatros");
                });

            modelBuilder.Entity("Servidor.Sessao", b =>
                {
                    b.HasOne("Servidor.Espetaculo", "espetaculos")
                        .WithMany()
                        .HasForeignKey("espetaculosid");

                    b.Navigation("espetaculos");
                });

            modelBuilder.Entity("Servidor.Cliente", b =>
                {
                    b.Navigation("bilhetes");
                });
#pragma warning restore 612, 618
        }
    }
}
